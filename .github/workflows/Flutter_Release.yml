name: Flutter_Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Grant write access to create a release

jobs:
  build:
    name: Build and Release Flutter App
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.19  
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      - name: List build directory contents
        run: ls -R build

      - name: Verify APK exists
        run: test -f build/app/outputs/apk/release/app-release.apk || { echo "APK not found!"; exit 1; }

      - name: Create and Push Git Tag
        id: create_tag
        run: |
          TAG_NAME=v1.0.${{ github.run_number }}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag -a $TAG_NAME -m "Release $TAG_NAME"
          git push origin $TAG_NAME
          git fetch --tags  # Ensure the tag is fetched before proceeding

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}  # Referencing tag from the previous step
          draft: false
          prerelease: false
          generate_release_notes: true  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/app/outputs/apk/release/app-release.apk  
          tag_name: ${{ env.TAG_NAME }}  # Referencing tag for upload step
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
